/**
 * The sequence of triangle numbers is generated by adding the natural numbers. 
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 * 1: 1
 * 3: 1,3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * What is the value of the first triangle number to have over five hundred divisors?
 * 
 * Answer is 76576500 at n=12375 
 * 
 * @author Allen Preville
 */
public class p12TriangularNumberDivisors {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		//Use Gauss summation formula n*(n+1)/2.0
		int n = 7;
		long triangleNumber;
		do{
			++n;
			triangleNumber = n*(n+1)/2;
			System.out.println("n: "+n+" tri number: "+triangleNumber+" "+numberOfDivisors(triangleNumber));
		}while( numberOfDivisors(triangleNumber) < 501 );

		System.out.println(triangleNumber);
	}

	public static int numberOfDivisors(long n){
		int divisors = 2;
		int sqrtn = (int) Math.sqrt(n);
		for (int i = 2; i<sqrtn; ++i){
			if(n%i==0){
				divisors+=2;
			}
		}
		//if number n is a perfect square, subtract 1 from the divisors.
		//if(sqrtn*sqrtn == n){--divisors;} //This is a rare special case, however, so I comment it out for speed.
		return divisors;
	}	
}
